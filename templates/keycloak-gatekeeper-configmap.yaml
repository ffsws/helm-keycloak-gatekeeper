apiVersion: v1
kind: ConfigMap
metadata:
  labels:
{{- include "keycloak-gatekeeper.labels" . | nindent 4 }}
  name: {{ include "keycloak-gatekeeper.name" . }}
data:
  keycloak-gatekeeper-{{ .Values.app.name  }}.conf: |-
    # is the url for retrieve the OpenID configuration - normally the <server>/auth/realm/<realm_name>
    discovery-url: {{ .Values.KeycloakGatekeeper.discoveryURL }}
    # Skip OpenID provider TLS verification
    skip-openid-provider-tls-verify: {{ .Values.KeycloakGatekeeper.skipTls }}
    # the client id for the 'client' application
    client-id: {{ .Values.KeycloakGatekeeper.clientId }}
    # the interface definition you wish the proxy to listen, all interfaces is specified as ':<port>', unix sockets as unix://<REL_PATH>|</ABS PATH>
    client-secret: {{ .Values.KeycloakGatekeeper.clientSecret }}
    listen: 0.0.0.0:{{ .Values.KeycloakGatekeeper.port }}

    # the upstream endpoint which we should proxy request
    upstream-url: http://{{ .Values.app.service.name }}:{{ .Values.app.service.port }}
    # whether to enable refresh tokens
    #enable-refresh-tokens: true
    # the redirection url, essentially the site url, note: /oauth/callback is added at the end
    #redirection-url: http://127.0.0.1:3000
    # the encryption key used to encode the session state
    #encryption-key: {{ .Values.KeycloakGatekeeper.encryptionKey }}
    
    # by default, the authorization header is enabled, causing issue with apps such as Grafana
    enable-authorization-header: false
    enable-logging: true
    enable-json-logging: true
    preserve-host: true
    enable-default-deny: true
    enable-metrics: true

    #sign-in-page: /opt/templates/sign_in.html.tmpl
    forbidden-page: /opt/templates/forbidden.html.tmpl
    resources:
    - uri: /*
      require-any-role: true
{{- if .Values.KeycloakGatekeeper.roles }}
      roles:
{{ toYaml .Values.KeycloakGatekeeper.roles | indent 6 }}
{{- end }}
